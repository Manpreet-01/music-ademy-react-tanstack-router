/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'

// Create Virtual Routes

const InstructorsLazyImport = createFileRoute('/instructors')()
const CoursesLazyImport = createFileRoute('/courses')()
const ContactLazyImport = createFileRoute('/contact')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const InstructorsLazyRoute = InstructorsLazyImport.update({
  path: '/instructors',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/instructors.lazy').then((d) => d.Route))

const CoursesLazyRoute = CoursesLazyImport.update({
  path: '/courses',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/courses.lazy').then((d) => d.Route))

const ContactLazyRoute = ContactLazyImport.update({
  path: '/contact',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/contact.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactLazyImport
      parentRoute: typeof rootRoute
    }
    '/courses': {
      id: '/courses'
      path: '/courses'
      fullPath: '/courses'
      preLoaderRoute: typeof CoursesLazyImport
      parentRoute: typeof rootRoute
    }
    '/instructors': {
      id: '/instructors'
      path: '/instructors'
      fullPath: '/instructors'
      preLoaderRoute: typeof InstructorsLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  ContactLazyRoute,
  CoursesLazyRoute,
  InstructorsLazyRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/contact",
        "/courses",
        "/instructors"
      ]
    },
    "/": {
      "filePath": "index.lazy.jsx"
    },
    "/contact": {
      "filePath": "contact.lazy.jsx"
    },
    "/courses": {
      "filePath": "courses.lazy.jsx"
    },
    "/instructors": {
      "filePath": "instructors.lazy.jsx"
    }
  }
}
ROUTE_MANIFEST_END */
